{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1>R e p o r t</h1>

    <a href="{{ path('report') }}#kmom01">kmom01</a>

    <div id="kmom01">
        <p>Här är min redovisningstext för kmom01: ramverk</p>

        <p>
            Jag har tidigare läst kursen 'Algoritmer och datastrukturer med objektorienterad Python' där jag bland annat fick lära mig att angripa ett problem på ett objektorienterat sätt samt designprinciper för att utveckla objektoerienterade program.
            Den kursen uppfattade jag personligen som avancerad.
        </p>

        <p>
            PHPs modell för klasser och objekt använder sig av objektorienterad programmering.
            Grunderna man behöver ha koll på för att kunna komma igång och skapa sina första klasser är:
            1. Konstruktor; Den används för att initilaisera objektets egenskaper när man skapar det. 
            Konstruktorn körs automatiskt när objektet skapas och den kan ta emot argument som parametrar vilka den använder för att sätta egenskaper.
            2. Egenskaper; Beskriver objektets tillstånd. Egenskaper representerar data som är unik för varje objekt och kan, som ovan nämnt, tilldelas värden från konstruktorn och/eller från objektets metoder.
            3. Metoder; Beskriver hur ett objekt beter sig. Metoder kan användas för att ändra på objektets egenskaper eller utföra andra saker som behövs för objektet, likt funktioner.
            4. Arv; Betyder att en klass kan ärva egenskaper och metoder från en annan klass. Detta gör att man, baserat på en grundklass, kan skapa mer specialiserade klasser.
        </p>

        <p>
            Strukturen som används till uppgiften me/report kan till en början bli väldigt överväldigande.
            Med tiden ser man dock att man oftast enbart jobbar i mapparna assets, public, src och templates.
            Nu i början är koden fortfarande lite svår, men jag hänger med ganska bra i flödet och hur allting kopplas samman.
        </p>

        <p>
            Med tanke på artikeln 'PHP The Right Way' är bland annat Composer och Autoloading viktiga delar som lyfts fram.
            Composer är en väldigt kraftfull pakethanterare som är mycket användbar vid hantering av beroenden.
            Den underlättaren även utvecklingen av applikationer i PHP.
            Autoloading gör att man på ett enklare ochh effektivare sätt kan utföra laddning av klassfiler utan manuell inkludering.
            Dessutom lyft vikten av att använda sig av objektorienterad programmering, som jag även under tidigare kurs förstått ger en möjlighet för att ha en strukturerad och lätt underhållbar kod.
            Det finns inte några särskilda områden som jag just nu känner att jag vill veta mer om.
        </p>

        <p>
            Min TIL för detta kmom är att jag har fått en bättre förståelse för hur jag kan koppla routes i PHP med twigfiler och på så sett visa något på en hemsida.
        </p>
    </div>

    <a href="{{ path('report') }}#kmom02">Kmom02</a>

    <div id="kmom02">
        <p>Här är min redovisningstext för kmom02</p>
    </div>

    <a href="{{ path('report') }}#kmom03">Kmom03</a>

    <div id="kmom03">
        <p>Här är min redovisningstext för kmom03</p>
    </div>

    <a href="{{ path('report') }}#kmom04">Kmom04</a>

    <div id="kmom04">
        <p>Här är min redovisningstext för kmom04</p>
    </div>

    <a href="{{ path('report') }}#kmom05">Kmom05</a>

    <div id="kmom05">
        <p>Här är min redovisningstext för kmom05</p>
    </div>

    <a href="{{ path('report') }}#kmom06">Kmom06</a>

    <div id="kmom06">
        <p>Här är min redovisningstext för kmom06</p>
    </div>
{% endblock %}